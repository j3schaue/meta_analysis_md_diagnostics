library(tidyverse)
adt <- readRDS("../../data/adt_data.RDS")
# RVE
library(robumeta)
dd <- adt %>%
group_by(studyid, groupid1, groupid2) %>%
arrange(desc(estimingpost)) %>%
slice(1) %>%
ungroup() %>%
select(studyid, es_g, se_g,
g1hrs = g1hrsperweek, g2hrs = g2hrsperweek) %>%
mutate(v_g = se_g^2,
g1hi = (g1hrs > 1.5),
g2hi = (g2hrs > 1.5),
g1_obs = ifelse(is.na(g1hi), 0, 1),
g2_obs = ifelse(is.na(g2hi), 0, 1),
g1_obs = factor(g1_obs),
g2_obs = factor(g2_obs))
mipat <- mice::md.pattern(dd %>% select(g1hi, g2hi), plot = FALSE)
View(mipat)
View(mipat)
View(mipat)
mipat
View(dd)
data <- dd %>% select(studyid, es_g, v_g, g1hrs, g2hrs, g1_hi, g2_hi)
data <- dd %>% select(studyid, es_g, v_g, g1hrs, g2hrs, g1hi, g2hi)
View(data)
library(mice)
?mice
imp <- mice(data, m = 20, run = FALSE)
imp <- mice(data, m = 20, run = FALSE, silence = TRUE)
imp <- mice(data, m = 20, run = FALSE, print = FALSE)
imp <- mice(data, m = 20, print = FALSE, maxit= 0)
ini <- mice(data, m = 20, print = FALSE, maxit= 0)
pred <- ini$predictorMatrix
```{r message = F}
pred
# Use the original numerical variables
data <- dd %>% select(studyid, es_g, v_g, g1hrs, g2hrs)
ini <- mice(data, m = 20, print = FALSE, maxit= 0)
pred <- ini$predictorMatrix
pred
md.pattern(data)
pred[,c("studyid")] <- 0
pred
imp <- mice(data, predictorMatrix = pred, print = FALSE, m = 20)
imp$method
complete_imp <- mice::complete(imp, action = "long")
View(complete_imp)
imp$imp[1]
imp$imp
imp$imp$g1hrs
md.pattern(data)
imp$imp$g1hrs
View(complete_imp)
# Calculate the mean
fit <- with(imp, mean(g1hrs))
?pool.scalar
View(fit)
?pool
pool(fit)
fit[["analyses"]]
imp_g1hrs <- imp$imp$g1hrs
imp_g2hrs <- imp$imp$g2hrs
View(imp_g2hrs)
# rowmean
imp_g1hrs %>% mutate(mean = rowMeans(.))
View(imp_g1hrs)
# rowmean
imp_g1hrs <- imp_g1hrs %>% mutate(mean = rowMeans(.))
imp_g2hrs <- imp_g2hrs %>% mutate(mean = rowMeans(.))
complete_imp <- mice::complete(imp, action = "long")
### Analysis
impdat <- complete_imp %>%
group_by(.imp)%>%
do(mutate(g1hi = (g1hrs > 1.5), # dichotomize g1hrs
g2hi = (g2hrs > 1.5)))%>%
ungroup()
### Analysis
impdat <- complete_imp %>%
group_by(.imp)%>%
mutate(g1hi = (g1hrs > 1.5), # dichotomize g1hrs
g2hi = (g2hrs > 1.5))%>%
ungroup()
impdat <- complete_imp %>%
group_by(.imp)%>%
mutate(g1hi = (g1hrs > 1.5), # dichotomize g1hrs
g2hi = (g2hrs > 1.5))
View(impdat)
impdat %>% group_by(.imp) %>%
md.pattern(. %>% select(g1hi, g2hi), plot = FALSE)
View(imp_g1hrs)
imp$imp$g1hrs
View(imp_g1hrs)
imp_g1hrs <- imp$imp$g1hrs
imp_g2hrs <- imp$imp$g2hrs
rownames(imp_g1hrs)
id_g1hrs<- rownames(imp_g1hrs)
id_g1hrs
id_g2hrs<- rownames(imp_g2hrs)
id_g2hrs
as.numeric(id_g1hrs)
id_g1hrs<- as.numeric(rownames(imp_g1hrs))
id_g1hrs
id_g2hrs<- as.numeric(rownames(imp_g2hrs))
impdat1 <- impdat%>%filter(.imp==1)
View(impdat1)
View(impdat1)
impdat1 <- impdat1 %>% mutate(g1obs = ifelse(.id %in% id_g1hrs, 0, 1))
impdat1 <- impdat1 %>% mutate(g1obs = ifelse(.id %in% id_g1hrs, 0, 1),
g2obs = ifelse(.id %in% id_g2hrs, 0, 1))
impdat1 %>% group_by(g1obs) %>% summarise(n = nrow(g1hrs))
impdat1 %>% group_by(g1obs) %>% summarise(n = n(g1hrs))
impdat1 <- impdat1 %>% mutate(g1obs = as.factor(ifelse(.id %in% id_g1hrs, 0, 1)),
g2obs = as.factor(ifelse(.id %in% id_g2hrs, 0, 1)))
?count
impdat1 %>% count(g1hi)
impdat1 %>% count(g1obs,g1hi)
## p(R = 0 | X = 0)
table <- impdat1 %>% count(g1obs,g1hi)
table
View(table)
table %>% filter(g1obs==0 & g1hi==FALSE)
table %>% filter(g1obs==0 & g1hi==FALSE)[,n]
table %>% filter(g1obs==0 & g1hi==FALSE)[,"n"]
table %>% filter(g1obs==0 & g1hi==FALSE)[1,"n"]
table %>% filter(g1obs==0 & g1hi==FALSE)["n"]
table %>% filter(g1obs==0 & g1hi==FALSE)
table[g1obs ==0 & g1hi==FALSE]
table["g1obs" ==0 & "g1hi"==FALSE]
table["g1obs" ==0 & "g1hi"==FALSE,4]
